buildscript {
    dependencies {
        classpath "gradle.plugin.nl.javadude.gradle.plugins:license-gradle-plugin:0.13.1"
    }
}

plugins {
    /* this plugin can check for newer versions of the used dependencies.
     * run it from the command line like this:
     * ./gradlew dependencyUpdates
     * see also: https://github.com/ben-manes/gradle-versions-plugin
     *
     * in Android Studio open the gradle projects view and start
     * Tasks - help - dependencyUpdates
     *
     * alternative:
     * IntelliJ: Analyze - Inspect code
     *   the results in the Inspection view will contain dependencies that can be updated
     *   Android>Lint>Correctness>Obsolete Gradle Dependency
     */
    id 'com.github.ben-manes.versions' version '0.14.0'
    // for publishing
    id "com.jfrog.bintray" version "1.7.3"
}

// https://docs.travis-ci.com/user/environment-variables/
def isCi = System.getenv("TRAVIS") != null

group 'com.tmtron.enums'
version '1.0.0'
description 'Annotation processor that builds an enum mapper which causes a compile-time error when you forget an enum'
ext {
    bintrayDryRun = false
}

subprojects {

    repositories {
        mavenCentral()
    }

    apply plugin: 'java'

    dependencies {
        testCompile group: 'junit', name: 'junit', version: '4.12'
    }

    if (!isCi) {
        // we don't need the bintray features for the ci build
        apply from: rootProject.file('gradle/bintray.gradle')
    }

    /*
     when I activate the licesne pluign, the bintray plugin creates an invalid pom file!
     http://stackoverflow.com/questions/43820811/using-the-bintray-plugin-and-license-gradle-plugin-together

    apply plugin: "com.github.hierynomus.license"
    license {
        header rootProject.file('LICENSE_HEADER')
        strictCheck true
        mapping {
            java = 'SLASHSTAR_STYLE'
        }
        ext.year = Calendar.getInstance().get(Calendar.YEAR)
    }
    */
}


